串行化（序列化）使用场景
——————————————
将对象用于网络传输或本地化存储

串行化（序列化）
————————————
将java对象转换成某种格式（JVM定义）的字节数数组

反串行化（反序列化）
————————————
将字节数组恢复成java对象

java.io.Serializable
————————————
1.可串行化接口，序列化java对象需实现此接口
2.此接口无内容，为标识性接口
3.可序列化类的所有子类型本身是可序列化的。
4.允许未实现序列化接口的子类实现序列化接口进行序列化，但必须拥有一个空的构造函数，以便进行反序列化时可以初始化类状态。

反串行化（反序列化）无需经过构造函数
————————————————————

Transient 关键字的作用
————————————————————
控制变量的序列化，在变量声明前加上该关键字，可以阻止该变量被序列化到文件中，
在被反序列化后，transient 变量的值被设为初始值，如 int 型的是 0，对象型的是 null。
